[package]
name = "birefnet"
description = "BiRefNet: Bilateral Reference Network for high-resolution dichotomous image segmentation"
edition.workspace = true
license.workspace = true
readme.workspace = true
repository.workspace = true
version.workspace = true

[[bin]]
name = "birefnet"
path = "src/bin/birefnet.rs"

[features]
default = ["inference", "ndarray"]

# Backend features - only at the top level
select_backend = []
cuda = ["burn/cuda", "burn/compilation-cache", "select_backend"]
rocm = ["burn/rocm", "burn/compilation-cache", "select_backend"]
metal = ["burn/metal", "select_backend"]
ndarray = ["burn/ndarray"]
wgpu = ["burn/wgpu", "select_backend"]
vulkan = ["burn/vulkan", "select_backend"]
wgpu-cpu = ["burn/wgpu", "select_backend"]

f16 = []
bf16 = []
f32 = []

# Task features
train = ["burn/train", "birefnet-model/train", "birefnet-train", "birefnet-loss", "birefnet-metric", "burn/metrics", "burn/tui"]
inference = ["birefnet-inference"]

[dependencies]
# Core BiRefNet crates
birefnet-inference = { path = "../birefnet-inference", version = "0.1.0", optional = true }
birefnet-loss = { path = "../birefnet-loss", version = "0.1.0", optional = true }
birefnet-metric = { path = "../birefnet-metric", version = "0.1.0", optional = true }
birefnet-model = { path = "../birefnet-model", version = "0.1.0" }
birefnet-train = { path = "../birefnet-train", version = "0.1.0", optional = true }
birefnet-util = { path = "../birefnet-util", version = "0.1.0" }

# CLI dependencies
anyhow = { workspace = true }
burn = { workspace = true }
cfg-if = { workspace = true }
clap = { workspace = true }
serde_json = { workspace = true }
stacker = { workspace = true }

[dev-dependencies]
burn = { workspace = true, features = ["ndarray"] }
